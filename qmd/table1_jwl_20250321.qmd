---
title: "Descriptive stat and table 1"
format:
  html
---

```{r, message=FALSE}
library(here)
library(tidyverse)
library(tinytex)
library(PupillometryR)
library(DT)
#library(lme4)
library(car)
library(knitr)
library(kableExtra)
#library(sf)
library(tigris)
knitr::opts_knit$set(root.dir = here())
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
theme_set(theme_bw(base_size = 12)) # Use black/white theme and increase font size for all ggplot figures
library(table1)
library(readr)
library(dplyr)
```

### Read data

```{r}
vaccine <- read_csv("data/vaccine.csv")
```


### Data cleaning made by Lin

```{r}

## clean dtaset
vaccine_dat <- vaccine %>% 
  
  # recode vaccination coverage rates with -1 as missing
  mutate(overall_recode = ifelse(overall == -1, NA, overall),
         mmr_recode = ifelse(mmr == -1, NA, mmr)) %>%   
  
  # recode missing or 2017 school year as 2017-2018 (as per dataset description)
  mutate(year_recode = case_when(
    year == "null" ~ "2017-18",
    year == "2017" ~ "2017-18",
    TRUE ~ year)) %>%
  
  # recode school type into public and private schools
  mutate(type_recode = case_when(
    type == "BOCES" | type == "Kindergarten" | type == "Public" ~ "Public",
    type == "Charter" | type == "Nonpublic" | type == "Private" ~ "Private",
    TRUE ~ type)) %>%
  
  # create state spending per pupil variable
  mutate(spend_person = round(statespending2016/schagepop2016, 0))
```



### Descriptive statistics

```{r}
total_data <- vaccine_dat %>%
  filter(mmr_recode != -1 | overall_recode != -1) %>%  
  summarise(
    private_total = sum(type_recode == "Private", na.rm = TRUE),
    public_total = sum(type_recode == "Public", na.rm = TRUE),
    na_total = sum(is.na(type_recode) | type_recode == " ", na.rm = TRUE))
```

```{r}
table1 <- vaccine_dat %>%
  filter(mmr_recode != -1 | overall_recode != -1) %>%  
  group_by(state) %>%
  summarise(
    private_number = sum(type_recode == "Private", na.rm = TRUE),
    public_number = sum(type_recode == "Public", na.rm = TRUE),
    na_number = sum(is.na(type_recode) | type_recode == " ", na.rm = TRUE),
    
    private_percent = round(private_number / total_data$private_total * 100, 0),
    public_percent = round(public_number / total_data$public_total * 100, 0),
    na_percent = round(na_number / total_data$na_total * 100, 0),
    
    mean_enroll = round(mean(enroll, na.rm = TRUE), 2),
    sd_enroll = round(sd(enroll, na.rm = TRUE), 2),
    median_enroll = round(median(enroll, na.rm = TRUE), 2),
    iqr_enroll = round(
            (quantile(enroll, 0.75, na.rm = TRUE)
           - quantile(enroll, 0.25, na.rm = TRUE)), 2),
    
    mean_overall = round(mean(overall_recode, na.rm = TRUE), 2),
    sd_overall = round(sd(overall_recode, na.rm = TRUE), 2),
    median_overall = round(median(overall_recode, na.rm = TRUE), 2),
    iqr_overall = round(
            (quantile(overall_recode, 0.75, na.rm = TRUE)
           - quantile(overall_recode, 0.25, na.rm = TRUE)), 2),
    
    mean_mmr = round(mean(mmr_recode, na.rm = TRUE), 2),
    sd_mmr = round(sd(mmr_recode, na.rm = TRUE), 2),
    median_mmr = round(median(mmr_recode, na.rm = TRUE), 2),
    iqr_mmr = round(
            (quantile(mmr_recode, 0.75, na.rm = TRUE)
           - quantile(mmr_recode, 0.25, na.rm = TRUE)), 2),
    
    spending = unique(statespending2016),
    spend_person = unique(spend_person)) %>%
  
  mutate(across(everything(), ~ replace(., is.na(.), " "))) %>% 
  
  mutate(
    private = paste0(private_number, " (", private_percent, "%)"),
    public = paste0(public_number, " (", public_percent, "%)"),
    na = paste0(na_number, " (", na_percent, "%)"),
    mean_sd_enroll = paste0(mean_enroll, " (", sd_enroll, ")"),
    median_iqr_enroll = paste0(median_enroll, " (", iqr_enroll, ")"),
    mean_sd_overall = paste0(mean_overall, " (", sd_overall, ")"),
    median_iqr_overall = paste0(median_overall, " (", iqr_overall, ")"),
    mean_sd_mmr = paste0(mean_mmr, " (", sd_mmr, ")"),
    median_iqr_mmr = paste0(median_mmr, " (", iqr_mmr, ")"))
```

### Table 1

```{r}
table1 %>% 
  select(state, private, public, na, spending, spend_person, 
         mean_sd_enroll, median_iqr_enroll,
         mean_sd_overall, median_iqr_overall, 
         mean_sd_mmr, median_iqr_mmr) %>% 
  
  mutate(across(everything(), ~ replace(., . == "  ( )" |
                                           . == "  ( - )" , " "))) %>% 
  
  kable(col.names = c("State <br> (N = 32)", 
                      "Private <br> (N = 3367)", 
                      "Public <br> (N = 13078)", 
                      "Unknown <br> (N = 25861)", 
                      "Per state", "Per person", 
                      "Mean (SD)", "Median (IQR)", 
                      "Mean (SD)", "Median (IQR)",
                      "Mean (SD)", "Median (IQR)"),
        format = "html", escape = FALSE) %>% 
  add_header_above(c(" " = 1, "School type" = 3, 
                     "State spending (in $1,000)" = 2, "Enrollment" = 2,
                     "Overall Vaccination Rate" = 2, "MMR Vaccination Rate" = 2))
```


```{r}

##** jwl added 2025mar18 - summarize data completion for the different models **
##*
#summary(vaccine_dat$mmr_recode)
#summary(vaccine_dat$overall_recode)

## check for duplicate school names
#dups <- vaccine_dat %>%
#  group_by(state, county, city, name) %>%
#  mutate(count = n()) %>%
#  ungroup()

#table(dups$count, useNA="ifany")


### create summary table for MMR 

## summarise number of schools reporting
num_school_mmr <- vaccine_dat %>%
  filter(!is.na(mmr_recode)) %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n_distinct(name)) %>%
  ungroup() %>%
  # summary statistics
  summarise(number_states = n(),
            total_schools = sum(number_schools),
            median_schools = median(number_schools),
            min_schools = min(number_schools),
            max_schools = max(number_schools))

## summarise number of schools reporting MMR and overall vaccination rates
enroll_mmr <- vaccine_dat %>%
  filter(!is.na(mmr_recode)) %>%
  mutate(has_enrollment = if_else(!is.na(enroll),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_enrollment = sum(has_enrollment),
            perc_reported_enrollment = round(reported_enrollment/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_enrollment = na_if(perc_reported_enrollment, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_with_enrollment = length(which(reported_enrollment!=0)),
            perc_states_w_enrollment = round(states_with_enrollment/number_states*100,1),
            min_perc_enrollment = min(perc_reported_enrollment, na.rm = T),
            max_perc_enrollment = max(perc_reported_enrollment, na.rm = T)
            ) %>%
  select(-number_states)
           
## summarise school type 
type_mmr <- vaccine_dat %>%
  filter(!is.na(mmr_recode)) %>%
  mutate(has_type = if_else(!is.na(type),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_type = sum(has_type),
            perc_reported_type = round(reported_type/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_type = na_if(perc_reported_type, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_schooltype = length(which(reported_type!=0)),
            perc_states_w_schooltype = round(states_w_schooltype/number_states*100,1)) %>%
  select(-number_states)

# has county
county_mmr <- vaccine_dat %>%
  filter(!is.na(mmr_recode)) %>%
  mutate(has_county = if_else(!is.na(county),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            with_county = sum(has_county),
            perc_reported_county = round(with_county/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_county = na_if(perc_reported_county, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_county = length(which(with_county!=0)),
            min_perc_county = min(perc_reported_county, na.rm = T),
            max_perc_county = max(perc_reported_county, na.rm = T)
  ) %>%
  select(-number_states)
      
## combine columns
mmr_data_tab <- cbind(num_school_mmr, enroll_mmr, type_mmr, county_mmr) %>%
  mutate(Group = "MMR")
  

### create summary table for overall vaccination

## summarise number of schools reporting
num_school_all <- vaccine_dat %>%
  filter(!is.na(overall_recode)) %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n_distinct(name)) %>%
  ungroup() %>%
  # summary statistics
  summarise(number_states = n(),
            total_schools = sum(number_schools),
            median_schools = median(number_schools),
            min_schools = min(number_schools),
            max_schools = max(number_schools))

## summarise number of schools reporting MMR and overall vaccination rates
enroll_all <- vaccine_dat %>%
  filter(!is.na(overall_recode)) %>%
  mutate(has_enrollment = if_else(!is.na(enroll),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_enrollment = sum(has_enrollment),
            perc_reported_enrollment = round(reported_enrollment/number_schools*100,1)) %>%
  ungroup() %>%
  # recode reported_enrollment=0 as missing
  mutate(perc_reported_enrollment = na_if(perc_reported_enrollment, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_with_enrollment = length(which(reported_enrollment!=0)),
            perc_states_w_enrollment = round(states_with_enrollment/number_states*100,1),
            min_perc_enrollment = min(perc_reported_enrollment, na.rm = T),
            max_perc_enrollment = max(perc_reported_enrollment, na.rm = T)
  ) %>%
  select(-number_states)

       
## summarise school type 
type_all <- vaccine_dat %>%
  filter(!is.na(overall_recode)) %>%
  mutate(has_type = if_else(!is.na(type),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_type = sum(has_type),
            perc_reported_type = round(reported_type/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_type = na_if(perc_reported_type, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_schooltype = length(which(reported_type!=0)),
            perc_states_w_schooltype = round(states_w_schooltype/number_states*100,1)) %>%
  select(-number_states)
      
# has county
county_all <- vaccine_dat %>%
  filter(!is.na(overall_recode)) %>%
  mutate(has_county = if_else(!is.na(county),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            with_county = sum(has_county),
            perc_reported_county = round(with_county/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_county = na_if(perc_reported_county, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_county = length(which(with_county!=0)),
            min_perc_county = min(perc_reported_county, na.rm = T),
            max_perc_county = max(perc_reported_county, na.rm = T)
            ) %>%
  select(-number_states)

# combine columns
overall_data_tab <- cbind(num_school_all, enroll_all, type_all, county_all) %>%
  mutate(Group = "Overall")
  
            

### create summary table for both MMR & overall

## summarise number of schools reporting
num_school_both <- vaccine_dat %>%
  filter(!is.na(overall_recode) & !is.na(mmr_recode)) %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n_distinct(name)) %>%
  ungroup() %>%
  # summary statistics
  summarise(number_states = n(),
            total_schools = sum(number_schools),
            median_schools = median(number_schools),
            min_schools = min(number_schools),
            max_schools = max(number_schools))

## summarise number of schools reporting MMR and overall vaccination rates
enroll_both <- vaccine_dat %>%
  filter(!is.na(overall_recode) & !is.na(mmr_recode)) %>%
  mutate(has_enrollment = if_else(!is.na(enroll),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_enrollment = sum(has_enrollment),
            perc_reported_enrollment = round(reported_enrollment/number_schools*100,1)) %>%
  ungroup() %>%
  # recode reported_enrollment=0 as missing
  mutate(perc_reported_enrollment = na_if(perc_reported_enrollment, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_with_enrollment = length(which(reported_enrollment!=0)),
            perc_states_w_enrollment = round(states_with_enrollment/number_states*100,1),
            min_perc_enrollment = min(perc_reported_enrollment, na.rm = T),
            max_perc_enrollment = max(perc_reported_enrollment, na.rm = T)
  ) %>%
  select(-number_states)

       
## summarise school type 
type_both <- vaccine_dat %>%
  filter(!is.na(overall_recode) & !is.na(mmr_recode)) %>%
  mutate(has_type = if_else(!is.na(type),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            reported_type = sum(has_type),
            perc_reported_type = round(reported_type/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_type = na_if(perc_reported_type, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_schooltype = length(which(reported_type!=0)),
            perc_states_w_schooltype = round(states_w_schooltype/number_states*100,1)) %>%
  select(-number_states)
      
county_both <- vaccine_dat %>%
  filter(!is.na(overall_recode) & !is.na(mmr_recode)) %>%
  mutate(has_county = if_else(!is.na(county),1,0)) %>%
  distinct() %>%
  # create count of schools by state
  group_by(state) %>%
  summarise(number_schools = n(),
            with_county = sum(has_county),
            perc_reported_county = round(with_county/number_schools*100,1)) %>%
  ungroup() %>%
 # recode reported_enrollment=0 as missing
  mutate(perc_reported_county = na_if(perc_reported_county, 0)) %>%
  # count of states with enrollment counts
  summarise(number_states = n_distinct(state),
            states_w_county = length(which(with_county!=0)),
            min_perc_county = min(perc_reported_county, na.rm = T),
            max_perc_county = max(perc_reported_county, na.rm = T)
            ) %>%
  select(-number_states)

## combine columns
both_data_tab <- cbind(num_school_both, enroll_both, type_both, county_both) %>%
  mutate(Group = "MMR & Overall")
  

## create final table
data_completion_tab <- rbind(overall_data_tab, mmr_data_tab, both_data_tab) %>%
    relocate(Group, .before = number_states) 

data_completion_tab %>%
  # make it pretty
    kable(col.names = c("Group",
                        "Number of states", 
                      "Total schools", 
                      "Median schools per state", 
                      "Min schools per state",
                      "Max schools per state", 
                      "# states with enrollment data",
                      "% states with enrollment data",
                      "Min % schools in state reporting enrollment",
                      "Max % schools in state reporting enrollment", 
                      "# states reporting school type",
                      "% states reporting school type",
                      "# states with county",
                      "Min % schools in state with county",
                      "Max % schools in state with county" 
                      ),
        format = "html", escape = FALSE) 


```